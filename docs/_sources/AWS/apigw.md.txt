# API GateWay
## API Gatewayとは
「Web API」の作成や公開、管理を行うためのフルマネージドサービス。  
サーバーレスのため、APIの実行基盤のサーバー構築や維持管理はAWSが責任を負う。

API Gatewayを利用することでRESTなWebAPIを作成、公開、管理することができる。

### REST APIとは
本題と外れるので、本当にざっくり重要ポイント解説すると、以下のルールに従って実装されたAPI
1. ステートレス  
    以前の通信状態に関係なく、毎回条件なら同じ結果を返す
2. 統一インターフェース  
    HTTPのリクエストを受付、JSONやXMLなどで返す

## API GatewayのAPIの種類
APIは3種類存在し、バックエンドのサービス、エンドポイントのタイプやCloudFrontが利用できるかなどの差がある   

APIの種類は３種類
- REST API
- HTTP API
- WebSocket API

バックエンドのサービスは5つ
- Lambda
- HTTPエンドポイント
- Mock
- AWS　サービス
- VPCリンク

エンドポイントのタイプは３種
- エッジ最適化APIエンドポイント（Cloud Front)
- プライベートAPIエンドポイント
- リージョンAPIエンドポイント

### APIで利用できる機能の差分について
■認証認可  
OAuthやOIDCの認証認可はHTTPでしか利用できないが、Cognitoオーソライザは、WebSocketやRESTで利用できる。

■エッジ最適化  
エッジ最適化エンドポイントはRESTのみがサポートしている。




## API GWのデプロイとステージ
APIは`ステージ`という論理的な環境にデプロイされる。APIがデプロイされると以下の形式のエンドポイントURLが払い出される
> https://{api-id}.execute-api.{region}.amazonaws.com/{stageName}/...

`{stageName}`は好きに設定することができ、prd,stg,devのように定義する




## API GWのスロットリング
API GWでは、流量制御の仕組みが実装されている。
流動制御により、過多なりクエストからAPIを守ったり、クライアントの使用量プランを作成できる。  

流動制御はスロットリングと呼ばれるトークンバケットアルゴリズムであり、1リクエストを処理するたびにバケットないのTokenが消費される。




## API GWと認証認可
API GWにより、認証認可の仕組みを適用する場合い、いくつかの実現方法がある
1. IAMアクセス権限  
クライアントは、IAMユーザーのアクセスキーをハッシュ化したAWS署名ver4をリクエストヘッダーに付与する。
API GWで署名を検証して問題なければAPIを呼び出す。

2. Lambda オーソライザ  
クライアントがリクエストに認証情報を付与して、Lambdaで認証して、IAMポリシーを返却する。
API GWでポリシー評価をして問題なければAPIを呼び出す。

3. Cognito オーソライザ  
クライアントはCognitoで認証してJWTを発行してもらってJWTリクエストのヘッダーに付与する。

4. JWT オーソライザ(OAuth/OIDC)
クライアントはOIDCやOAuth2のプロバイダーでで認証してJWTを発行してもらってJWTリクエストのヘッダーに付与する。
